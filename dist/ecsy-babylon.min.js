!function(e,t){"use strict";class i{constructor(){this.options={}}}function s(t){return e.Angle.FromDegrees(t).radians()}function n(t){return new e.Vector3(t.x,t.y,t.z)}function r(t){return new e.Vector3(s(t.x),s(t.y),s(t.z))}function o(e,t,i){return e&&t&&i?{x:e,y:t,z:i}:{x:0,y:0,z:0}}class a{constructor(){this.position=o(),this.rotation=o(),this.scale=o(1,1,1)}}class c{constructor(){this.pointerLock=!1}}var h,d,u,l,p;!function(e){e.Box="Box",e.Plane="Plane",e.Sphere="Sphere",e.Ground="Ground"}(h||(h={}));class m{constructor(){this.type=h.Box,this.options={}}}!function(e){e.Point="Point",e.Directional="Directional",e.Spot="Spot",e.Hemispheric="Hemispheric"}(d||(d={}));class g{constructor(){this.type=d.Hemispheric,this.direction=o()}}function f(e,t){e.object[t]=e[t]}function b(e,t){e.object[t]=n(e[t])}function y(e){let t=e.getComponents();for(let i in t){let s=t[i];s.object&&e.hasComponent(a)&&_(e.getMutableComponent(a),s)}}function _(e,t){let i=t.object;i.position&&(i.position=n(e.position)),i.rotation&&(i.rotation=r(e.rotation)),i.scaling&&(i.scaling=n(e.scale))}function C(e){e.object&&e.object.dispose()}function S(e,t,i){for(let s in t){let n=t[s];i.addTextureTask(s,n.url).onSuccess=t=>{let i=t.texture;for(let e in n)"url"!==e&&(i[e]=n[e]);let r=`${s}Texture`,o=e.object;o[r]&&C(o[r]),o[r]=i}}i.load(),i.reset()}function x(t){return e.Color3.FromHexString(t)}function v(t){return e.Color4.FromHexString(t)}class E{constructor(){var e;this.color=e?{diffuse:e}:{diffuse:"#ffffff"}}}!function(e){e.Point="Point",e.Box="Box",e.Sphere="Sphere",e.DirectedSphere="DirectedSphere",e.Hemisphere="Hemisphere",e.Cylinder="Cylinder",e.DirectedCylinder="DirectedCylinder",e.Cone="Cone"}(u||(u={}));class j{constructor(){this.type=u.Point,this.capacity=100,this.emitter=o(),this.direction1=o(),this.direction2=o(10,10,10),this.minEmitBox=o(),this.maxEmitBox=o()}}!function(e){e.Babylon="Babylon"}(l||(l={}));class k{constructor(){this.type=l.Babylon}}!function(e){e.Keyboard="Keyboard"}(p||(p={}));class w{constructor(){this.type=p.Keyboard}}function q(e){return e.world}class M extends t.System{constructor(){super(...arguments),this._assetManagers=new Map,this.onSceneSwitched=new e.Observable}get renderingCanvas(){return this._engine.getRenderingCanvas()}get scenes(){return this._engine.scenes}get activeScene(){return this._activeScene}init(){this._render=this._render.bind(this)}execute(){this.queries.scene.added.forEach(t=>{let s=t.getComponent(i);s.object=new e.Scene(this._engine,s.options),1===this._engine.scenes.length&&(this._activeScene=s.object),this._updateScene(t);let n=new e.AssetsManager(s.object);n.useDefaultLoadingScreen=!1,this._assetManagers.set(s.object.uid,n)}),this.queries.scene.changed.forEach(e=>{this._updateScene(e)}),this.queries.scene.removed.forEach(e=>{C(e.getComponent(i))})}_updateScene(e){let t=e.getComponent(i);for(let i in t)switch(i){case"texture":S(t,t.texture,this.getAssetManager(e));break;case"color":this._updateColor(t,t.color);break;default:f(t,i)}}_updateColor(e,t){for(let i in t)switch(i){case"clear":e.object[`${i}Color`]=v(t[i]);break;default:e.object[`${i}Color`]=x(t[i])}}start(t,i,s,n){return this._engine=new e.Engine(t,i,s,n),this._engine.runRenderLoop(this._render),this}switchScene(e){return this._activeScene=e.getComponent(i).object,this.onSceneSwitched.notifyObservers(this._activeScene),this}getAssetManager(e){return e?this._assetManagers.get(e.getComponent(i).object.uid):this._assetManagers.get(this._activeScene.uid)}_render(){q(this).execute(this._engine.getDeltaTime(),performance.now()),q(this).enabled&&this._activeScene.render()}}M.queries={scene:{components:[i],listen:{added:!0,removed:!0,changed:[i]}}};class L extends t.System{execute(){this.queries.transforms.changed.forEach(e=>{y(e)})}}function P(e){return q(e).getSystem(M)}function B(e){return P(e).renderingCanvas}function K(e){return P(e).scenes}function T(e,t){return t?t.getComponent(i).object:P(e).activeScene}function D(e,t){return P(e).getAssetManager(t)}L.queries={transforms:{components:[a],listen:{changed:[a]}}};class O extends t.System{constructor(){super(...arguments),this._cameras=new Map}init(){P(this).onSceneSwitched.add(e=>this._updateControl(e)),this._pointerLock=this._pointerLock.bind(this)}execute(){this.queries.camera.added.forEach(t=>{let i=t.getComponent(c),s=T(this,i.scene);i.object=new e.FreeCamera("",e.Vector3.Zero(),s),y(t),this._cameras.set(s.uid,i),this._updateControl(s)}),this.queries.camera.removed.forEach(e=>{let t=e.getComponent(c),i=T(this,t.scene);this._removeControl(i),this._cameras.has(i.uid)&&this._cameras.delete(i.uid),C(t)})}_updateControl(e){if(e.uid===T(this).uid){K(this).forEach(e=>this._removeControl(e));let t=this._cameras.get(e.uid);t.object.attachControl(B(this)),t.pointerLock?e.onPointerObservable.add(this._pointerLock):document.exitPointerLock()}}_removeControl(e){this._cameras.forEach((t,i)=>i===e.uid&&t.object.detachControl(B(this))),e.onPointerObservable.removeCallback(this._pointerLock)}_pointerLock(e){"pointerdown"===e.event.type&&(document.pointerLockElement||B(this).requestPointerLock())}}O.queries={camera:{components:[c],listen:{added:!0,removed:!0}}};class H extends t.System{execute(){this.queries.mesh.added.forEach(t=>{let i=t.getComponent(m);i.object=e.MeshBuilder[`Create${i.type}`].call(this,i.type,i.options,T(this,i.scene)),y(t)}),this.queries.mesh.changed.forEach(e=>{let t=e.getMutableComponent(m);for(let e in t)f(t,e)}),this.queries.mesh.removed.forEach(e=>{C(e.getComponent(m))})}}H.queries={mesh:{components:[m],listen:{added:!0,removed:!0,changed:[m]}}};class A extends t.System{execute(){this.queries.light.added.forEach(t=>{let i=t.getComponent(g),r=n(i.direction),o=T(this,i.scene);switch(i.type){case d.Point:i.object=new e.PointLight(i.type,e.Vector3.Zero(),o);break;case d.Directional:i.object=new e.DirectionalLight(i.type,r,o);break;case d.Spot:i.object=new e.SpotLight(i.type,e.Vector3.Zero(),r,s(i.angle),i.exponent,o);break;default:i.object=new e.HemisphericLight(d.Hemispheric,r,o)}this._updateLight(i),y(t)}),this.queries.light.changed.forEach(e=>{this._updateLight(e.getComponent(g))}),this.queries.light.removed.forEach(e=>{C(e.getComponent(g))})}_updateLight(e){for(let t in e)switch(t){case"direction":b(e,t);break;case"color":this._updateColor(e,e.color);break;default:f(e,t)}}_updateColor(e,t){for(let i in t)e.object[i]=x(t[i])}}A.queries={light:{components:[g],listen:{added:!0,removed:!0,changed:[g]}}};class R extends t.System{execute(){this.queries.meshMaterial.added.forEach(t=>{let i=t.getComponent(E);i.object=new e.StandardMaterial(i.color.diffuse,T(this,i.scene)),this._updateMaterial(i),t.getComponent(m).object.material=i.object}),this.queries.meshMaterial.changed.forEach(e=>{this._updateMaterial(e.getComponent(E))}),this.queries.meshMaterial.removed.forEach(e=>{C(e.getComponent(E)),e.getComponent(m).object.material=null})}_updateMaterial(e){for(let t in e)switch(t){case"color":this._updateColor(e,e.color);break;case"texture":S(e,e.texture,D(this,e.scene));break;default:f(e,t)}}_updateColor(e,t){for(let i in t)e.object[`${i}Color`]=x(t[i])}}R.queries={meshMaterial:{components:[m,E],listen:{added:!0,removed:!0,changed:[E]}}};class z extends t.System{execute(){this.queries.particle.added.forEach(t=>{let i=t.getComponent(j);i.object=new e.ParticleSystem(i.type,i.capacity,T(this,i.scene));let s=i.object;switch(i.type){case u.Point:s.createPointEmitter(n(i.direction1),n(i.direction2));break;case u.Box:s.createBoxEmitter(n(i.direction1),n(i.direction2),n(i.minEmitBox),n(i.maxEmitBox));break;case u.Sphere:s.createSphereEmitter(i.radius,i.radiusRange);break;case u.DirectedSphere:s.createDirectedSphereEmitter(i.radius,n(i.direction1),n(i.direction2));break;case u.Hemisphere:s.createHemisphericEmitter(i.radius,i.radiusRange);break;case u.Cylinder:s.createCylinderEmitter(i.radius,i.height,i.radiusRange,Math.random());break;case u.DirectedCylinder:s.createDirectedCylinderEmitter(i.radius,i.height,i.radiusRange,n(i.direction1),n(i.direction2));break;case u.Cone:s.createConeEmitter(i.radius,i.angle)}this._updateParticle(i),y(t),s.start()}),this.queries.particle.changed.forEach(e=>{this._updateParticle(e.getComponent(j))}),this.queries.particle.removed.forEach(e=>{let t=e.getComponent(j);t.object.stop(),C(t)})}_updateParticle(e){for(let t in e)switch(t){case"emitter":case"direction1":case"direction2":case"minEmitBox":case"maxEmitBox":b(e,t);break;case"texture":S(e,e.texture,D(this,e.scene));break;case"color":this._updateColor(e,e.color);break;default:f(e,t)}}_updateColor(e,t){for(let i in t)e.object[i]=v(t[i])}}z.queries={particle:{components:[j],listen:{added:!0,removed:!0,changed:[j]}}};class V extends t.System{execute(){this.queries.asset.added.forEach(e=>{let t=e.getComponent(k),i=D(this,t.scene);switch(t.type){default:{let s=t.url.lastIndexOf("/")+1;i.addMeshTask(l.Babylon,"",t.url.substring(0,s),t.url.substring(s,t.url.length)).onSuccess=i=>{t.object=i.loadedMeshes[0],y(e)};break}}i.load(),i.reset()}),this.queries.asset.removed.forEach(e=>{C(e.getComponent(k))})}}V.queries={asset:{components:[k],listen:{added:!0,removed:!0}}};class $ extends t.System{constructor(){super(...arguments),this._inputs=new Map}init(){P(this).onSceneSwitched.add(e=>this._updateOnKey(e)),this._onKey=this._onKey.bind(this)}execute(){this.queries.input.added.forEach(e=>{let t=e.getComponent(w),i=T(this,t.scene);t.type,this._inputs.has(i.uid)||(this._inputs.set(i.uid,t),this._updateOnKey(i))}),this.queries.input.removed.forEach(e=>{let t=e.getComponent(w),i=T(this,t.scene);t.type,this._inputs.has(i.uid)&&(this._inputs.delete(i.uid),this._removeOnKey(i))})}_updateOnKey(e){e.uid===T(this).uid&&(K(this).forEach(e=>this._removeOnKey(e)),this._input=this._inputs.get(e.uid),this._input.onKey&&e.onKeyboardObservable.add(this._onKey))}_removeOnKey(e){e.onKeyboardObservable.removeCallback(this._onKey)}_onKey(e){this._input.onKey.call(this._input,e.event.key,1===e.type,2===e.type)}}$.queries={input:{components:[w],listen:{added:!0,removed:!0}}};var F=Object.freeze({__proto__:null,GameSystem:M,TransformSystem:L,CameraSystem:O,MeshSystem:H,LightSystem:A,MaterialSystem:R,ParticleSystem:z,AssetSystem:V,InputSystem:$,Scene:i,Transform:a,Camera:c,get MeshTypes(){return h},Mesh:m,get LightTypes(){return d},Light:g,Material:E,get ParticleTypes(){return u},Particle:j,get AssetTypes(){return l},Asset:k,get InputTypes(){return p},Input:w,getScene:T,getAssetManager:D,degreeToRadians:s,xyzToVector3:n,xyzToVector3Radians:r,hexToColor3:x,hexToColor4:v});window.EB=F}(BABYLON,ECSY);
